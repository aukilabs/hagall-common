// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: messages/hagallpb/hagall.proto

package hagallpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EntityFlag represents a flag that gives context to an entity.
//
// Note: this is currently only used to be able to tell what entity represents
// a participant, used for toggling rendering of participant entities assets.
type EntityFlag int32

const (
	EntityFlag_ENTITY_FLAG_EMPTY              EntityFlag = 0
	EntityFlag_ENTITY_FLAG_PARTICIPANT_ENTITY EntityFlag = 1
)

// Enum value maps for EntityFlag.
var (
	EntityFlag_name = map[int32]string{
		0: "ENTITY_FLAG_EMPTY",
		1: "ENTITY_FLAG_PARTICIPANT_ENTITY",
	}
	EntityFlag_value = map[string]int32{
		"ENTITY_FLAG_EMPTY":              0,
		"ENTITY_FLAG_PARTICIPANT_ENTITY": 1,
	}
)

func (x EntityFlag) Enum() *EntityFlag {
	p := new(EntityFlag)
	*p = x
	return p
}

func (x EntityFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_hagallpb_hagall_proto_enumTypes[0].Descriptor()
}

func (EntityFlag) Type() protoreflect.EnumType {
	return &file_messages_hagallpb_hagall_proto_enumTypes[0]
}

func (x EntityFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityFlag.Descriptor instead.
func (EntityFlag) EnumDescriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{0}
}

// MsgType represents the type of message passed between Hagall and a client.
//
// Note that enum values are prefixed because protobuf enum values use C++
// scoping rules, meaning that enum values are siblings of their type, not
// children of it. Therefore, enum values must be unique within "hagall_proto",
// not just within "MsgType".
type MsgType int32

const (
	MsgType_MSG_TYPE_ERROR_RESPONSE                             MsgType = 0
	MsgType_MSG_TYPE_SYNC_CLOCK                                 MsgType = 1
	MsgType_MSG_TYPE_SESSION_STATE                              MsgType = 2
	MsgType_MSG_TYPE_PARTICIPANT_JOIN_REQUEST                   MsgType = 3
	MsgType_MSG_TYPE_PARTICIPANT_JOIN_RESPONSE                  MsgType = 4
	MsgType_MSG_TYPE_PARTICIPANT_JOIN_BROADCAST                 MsgType = 5
	MsgType_MSG_TYPE_PARTICIPANT_LEAVE_REQUEST                  MsgType = 6
	MsgType_MSG_TYPE_PARTICIPANT_LEAVE_BROADCAST                MsgType = 7
	MsgType_MSG_TYPE_ENTITY_ADD_REQUEST                         MsgType = 8
	MsgType_MSG_TYPE_ENTITY_ADD_RESPONSE                        MsgType = 9
	MsgType_MSG_TYPE_ENTITY_ADD_BROADCAST                       MsgType = 10
	MsgType_MSG_TYPE_ENTITY_DELETE_REQUEST                      MsgType = 11
	MsgType_MSG_TYPE_ENTITY_DELETE_RESPONSE                     MsgType = 12
	MsgType_MSG_TYPE_ENTITY_DELETE_BROADCAST                    MsgType = 13
	MsgType_MSG_TYPE_ENTITY_UPDATE_POSE                         MsgType = 14
	MsgType_MSG_TYPE_ENTITY_UPDATE_POSE_BROADCAST               MsgType = 15
	MsgType_MSG_TYPE_CUSTOM_MESSAGE                             MsgType = 16
	MsgType_MSG_TYPE_CUSTOM_MESSAGE_BROADCAST                   MsgType = 17
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_REQUEST          MsgType = 18
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_RESPONSE         MsgType = 19
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_REQUEST     MsgType = 20
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_RESPONSE    MsgType = 21
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_REQUEST       MsgType = 22
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_RESPONSE      MsgType = 23
	MsgType_MSG_TYPE_ENTITY_COMPONENT_ADD_REQUEST               MsgType = 24
	MsgType_MSG_TYPE_ENTITY_COMPONENT_ADD_RESPONSE              MsgType = 25
	MsgType_MSG_TYPE_ENTITY_COMPONENT_ADD_BROADCAST             MsgType = 26
	MsgType_MSG_TYPE_ENTITY_COMPONENT_DELETE_REQUEST            MsgType = 27
	MsgType_MSG_TYPE_ENTITY_COMPONENT_DELETE_RESPONSE           MsgType = 28
	MsgType_MSG_TYPE_ENTITY_COMPONENT_DELETE_BROADCAST          MsgType = 29
	MsgType_MSG_TYPE_ENTITY_COMPONENT_UPDATE                    MsgType = 30
	MsgType_MSG_TYPE_ENTITY_COMPONENT_UPDATE_BROADCAST          MsgType = 31
	MsgType_MSG_TYPE_ENTITY_COMPONENT_LIST_REQUEST              MsgType = 32
	MsgType_MSG_TYPE_ENTITY_COMPONENT_LIST_RESPONSE             MsgType = 33
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_REQUEST    MsgType = 34
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_RESPONSE   MsgType = 35
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_REQUEST  MsgType = 36
	MsgType_MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_RESPONSE MsgType = 37
	MsgType_MSG_TYPE_PING_REQUEST                               MsgType = 38
	MsgType_MSG_TYPE_PING_RESPONSE                              MsgType = 39
	MsgType_MSG_TYPE_RECEIPT_REQUEST                            MsgType = 40
	MsgType_MSG_TYPE_RECEIPT_RESPONSE                           MsgType = 41
	MsgType_MSG_TYPE_SIGNED_PING_REQUEST                        MsgType = 42
	MsgType_MSG_TYPE_SIGNED_PING_RESPONSE                       MsgType = 43
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0:  "MSG_TYPE_ERROR_RESPONSE",
		1:  "MSG_TYPE_SYNC_CLOCK",
		2:  "MSG_TYPE_SESSION_STATE",
		3:  "MSG_TYPE_PARTICIPANT_JOIN_REQUEST",
		4:  "MSG_TYPE_PARTICIPANT_JOIN_RESPONSE",
		5:  "MSG_TYPE_PARTICIPANT_JOIN_BROADCAST",
		6:  "MSG_TYPE_PARTICIPANT_LEAVE_REQUEST",
		7:  "MSG_TYPE_PARTICIPANT_LEAVE_BROADCAST",
		8:  "MSG_TYPE_ENTITY_ADD_REQUEST",
		9:  "MSG_TYPE_ENTITY_ADD_RESPONSE",
		10: "MSG_TYPE_ENTITY_ADD_BROADCAST",
		11: "MSG_TYPE_ENTITY_DELETE_REQUEST",
		12: "MSG_TYPE_ENTITY_DELETE_RESPONSE",
		13: "MSG_TYPE_ENTITY_DELETE_BROADCAST",
		14: "MSG_TYPE_ENTITY_UPDATE_POSE",
		15: "MSG_TYPE_ENTITY_UPDATE_POSE_BROADCAST",
		16: "MSG_TYPE_CUSTOM_MESSAGE",
		17: "MSG_TYPE_CUSTOM_MESSAGE_BROADCAST",
		18: "MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_REQUEST",
		19: "MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_RESPONSE",
		20: "MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_REQUEST",
		21: "MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_RESPONSE",
		22: "MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_REQUEST",
		23: "MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_RESPONSE",
		24: "MSG_TYPE_ENTITY_COMPONENT_ADD_REQUEST",
		25: "MSG_TYPE_ENTITY_COMPONENT_ADD_RESPONSE",
		26: "MSG_TYPE_ENTITY_COMPONENT_ADD_BROADCAST",
		27: "MSG_TYPE_ENTITY_COMPONENT_DELETE_REQUEST",
		28: "MSG_TYPE_ENTITY_COMPONENT_DELETE_RESPONSE",
		29: "MSG_TYPE_ENTITY_COMPONENT_DELETE_BROADCAST",
		30: "MSG_TYPE_ENTITY_COMPONENT_UPDATE",
		31: "MSG_TYPE_ENTITY_COMPONENT_UPDATE_BROADCAST",
		32: "MSG_TYPE_ENTITY_COMPONENT_LIST_REQUEST",
		33: "MSG_TYPE_ENTITY_COMPONENT_LIST_RESPONSE",
		34: "MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_REQUEST",
		35: "MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_RESPONSE",
		36: "MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_REQUEST",
		37: "MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_RESPONSE",
		38: "MSG_TYPE_PING_REQUEST",
		39: "MSG_TYPE_PING_RESPONSE",
		40: "MSG_TYPE_RECEIPT_REQUEST",
		41: "MSG_TYPE_RECEIPT_RESPONSE",
		42: "MSG_TYPE_SIGNED_PING_REQUEST",
		43: "MSG_TYPE_SIGNED_PING_RESPONSE",
	}
	MsgType_value = map[string]int32{
		"MSG_TYPE_ERROR_RESPONSE":                             0,
		"MSG_TYPE_SYNC_CLOCK":                                 1,
		"MSG_TYPE_SESSION_STATE":                              2,
		"MSG_TYPE_PARTICIPANT_JOIN_REQUEST":                   3,
		"MSG_TYPE_PARTICIPANT_JOIN_RESPONSE":                  4,
		"MSG_TYPE_PARTICIPANT_JOIN_BROADCAST":                 5,
		"MSG_TYPE_PARTICIPANT_LEAVE_REQUEST":                  6,
		"MSG_TYPE_PARTICIPANT_LEAVE_BROADCAST":                7,
		"MSG_TYPE_ENTITY_ADD_REQUEST":                         8,
		"MSG_TYPE_ENTITY_ADD_RESPONSE":                        9,
		"MSG_TYPE_ENTITY_ADD_BROADCAST":                       10,
		"MSG_TYPE_ENTITY_DELETE_REQUEST":                      11,
		"MSG_TYPE_ENTITY_DELETE_RESPONSE":                     12,
		"MSG_TYPE_ENTITY_DELETE_BROADCAST":                    13,
		"MSG_TYPE_ENTITY_UPDATE_POSE":                         14,
		"MSG_TYPE_ENTITY_UPDATE_POSE_BROADCAST":               15,
		"MSG_TYPE_CUSTOM_MESSAGE":                             16,
		"MSG_TYPE_CUSTOM_MESSAGE_BROADCAST":                   17,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_REQUEST":          18,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_ADD_RESPONSE":         19,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_REQUEST":     20,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_NAME_RESPONSE":    21,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_REQUEST":       22,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_GET_ID_RESPONSE":      23,
		"MSG_TYPE_ENTITY_COMPONENT_ADD_REQUEST":               24,
		"MSG_TYPE_ENTITY_COMPONENT_ADD_RESPONSE":              25,
		"MSG_TYPE_ENTITY_COMPONENT_ADD_BROADCAST":             26,
		"MSG_TYPE_ENTITY_COMPONENT_DELETE_REQUEST":            27,
		"MSG_TYPE_ENTITY_COMPONENT_DELETE_RESPONSE":           28,
		"MSG_TYPE_ENTITY_COMPONENT_DELETE_BROADCAST":          29,
		"MSG_TYPE_ENTITY_COMPONENT_UPDATE":                    30,
		"MSG_TYPE_ENTITY_COMPONENT_UPDATE_BROADCAST":          31,
		"MSG_TYPE_ENTITY_COMPONENT_LIST_REQUEST":              32,
		"MSG_TYPE_ENTITY_COMPONENT_LIST_RESPONSE":             33,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_REQUEST":    34,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_SUBSCRIBE_RESPONSE":   35,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_REQUEST":  36,
		"MSG_TYPE_ENTITY_COMPONENT_TYPE_UNSUBSCRIBE_RESPONSE": 37,
		"MSG_TYPE_PING_REQUEST":                               38,
		"MSG_TYPE_PING_RESPONSE":                              39,
		"MSG_TYPE_RECEIPT_REQUEST":                            40,
		"MSG_TYPE_RECEIPT_RESPONSE":                           41,
		"MSG_TYPE_SIGNED_PING_REQUEST":                        42,
		"MSG_TYPE_SIGNED_PING_RESPONSE":                       43,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_hagallpb_hagall_proto_enumTypes[1].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_messages_hagallpb_hagall_proto_enumTypes[1]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{1}
}

// Error represents a request status code given with Hagall responses.
//
// Note that enum values are prefixed because protobuf enum values use C++
// scoping rules, meaning that enum values are siblings of their type, not
// children of it. Therefore, enum values must be unique within "hagall_proto",
// not just within "ErrorCode".
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNKNOWN                ErrorCode = 0 // copy paste the resason why use prefix.
	ErrorCode_ERROR_CODE_BAD_REQUEST            ErrorCode = 400
	ErrorCode_ERROR_CODE_UNAUTHORIZED           ErrorCode = 401
	ErrorCode_ERROR_CODE_NOT_FOUND              ErrorCode = 404
	ErrorCode_ERROR_CODE_CONFLICT               ErrorCode = 409
	ErrorCode_ERROR_CODE_TOO_LARGE              ErrorCode = 413
	ErrorCode_ERROR_CODE_SESSION_NOT_JOINED     ErrorCode = 460
	ErrorCode_ERROR_CODE_SESSION_ALREADY_JOINED ErrorCode = 461
	ErrorCode_ERROR_CODE_INTERNAL_SERVER_ERROR  ErrorCode = 500
	ErrorCode_ERROR_CODE_NOT_IMPLEMENTED        ErrorCode = 501
	ErrorCode_ERROR_CODE_SERVER_TOO_BUSY        ErrorCode = 503
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "ERROR_CODE_UNKNOWN",
		400: "ERROR_CODE_BAD_REQUEST",
		401: "ERROR_CODE_UNAUTHORIZED",
		404: "ERROR_CODE_NOT_FOUND",
		409: "ERROR_CODE_CONFLICT",
		413: "ERROR_CODE_TOO_LARGE",
		460: "ERROR_CODE_SESSION_NOT_JOINED",
		461: "ERROR_CODE_SESSION_ALREADY_JOINED",
		500: "ERROR_CODE_INTERNAL_SERVER_ERROR",
		501: "ERROR_CODE_NOT_IMPLEMENTED",
		503: "ERROR_CODE_SERVER_TOO_BUSY",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNKNOWN":                0,
		"ERROR_CODE_BAD_REQUEST":            400,
		"ERROR_CODE_UNAUTHORIZED":           401,
		"ERROR_CODE_NOT_FOUND":              404,
		"ERROR_CODE_CONFLICT":               409,
		"ERROR_CODE_TOO_LARGE":              413,
		"ERROR_CODE_SESSION_NOT_JOINED":     460,
		"ERROR_CODE_SESSION_ALREADY_JOINED": 461,
		"ERROR_CODE_INTERNAL_SERVER_ERROR":  500,
		"ERROR_CODE_NOT_IMPLEMENTED":        501,
		"ERROR_CODE_SERVER_TOO_BUSY":        503,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_hagallpb_hagall_proto_enumTypes[2].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_messages_hagallpb_hagall_proto_enumTypes[2]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{2}
}

// Participant represents a Hagall client connected from a WebSocket.
type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The participant id.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{0}
}

func (x *Participant) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// An entity that have a pose in a session.
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The entity id.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the participant who owns the entity.
	ParticipantId uint32 `protobuf:"varint,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// The pose in the current session.
	Pose *Pose `protobuf:"bytes,3,opt,name=pose,proto3" json:"pose,omitempty"`
	// The entity flag.
	Flag EntityFlag `protobuf:"varint,4,opt,name=flag,proto3,enum=hagall.EntityFlag" json:"flag,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Entity) GetParticipantId() uint32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

func (x *Entity) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

func (x *Entity) GetFlag() EntityFlag {
	if x != nil {
		return x.Flag
	}
	return EntityFlag_ENTITY_FLAG_EMPTY
}

// Pose represents a position within a session.
type Pose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Px float32 `protobuf:"fixed32,1,opt,name=px,proto3" json:"px,omitempty"`
	Py float32 `protobuf:"fixed32,2,opt,name=py,proto3" json:"py,omitempty"`
	Pz float32 `protobuf:"fixed32,3,opt,name=pz,proto3" json:"pz,omitempty"`
	Rx float32 `protobuf:"fixed32,4,opt,name=rx,proto3" json:"rx,omitempty"`
	Ry float32 `protobuf:"fixed32,5,opt,name=ry,proto3" json:"ry,omitempty"`
	Rz float32 `protobuf:"fixed32,6,opt,name=rz,proto3" json:"rz,omitempty"`
	Rw float32 `protobuf:"fixed32,7,opt,name=rw,proto3" json:"rw,omitempty"`
}

func (x *Pose) Reset() {
	*x = Pose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pose) ProtoMessage() {}

func (x *Pose) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pose.ProtoReflect.Descriptor instead.
func (*Pose) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{2}
}

func (x *Pose) GetPx() float32 {
	if x != nil {
		return x.Px
	}
	return 0
}

func (x *Pose) GetPy() float32 {
	if x != nil {
		return x.Py
	}
	return 0
}

func (x *Pose) GetPz() float32 {
	if x != nil {
		return x.Pz
	}
	return 0
}

func (x *Pose) GetRx() float32 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *Pose) GetRy() float32 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *Pose) GetRz() float32 {
	if x != nil {
		return x.Rz
	}
	return 0
}

func (x *Pose) GetRw() float32 {
	if x != nil {
		return x.Rw
	}
	return 0
}

// Msg represents a message passed between Hagall and its clients through a
// WebSocket.
type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{3}
}

func (x *Msg) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *Msg) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Request represents a client request.
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{4}
}

func (x *Request) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *Request) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Request) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// Response represents a message returned in response to a request.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *Response) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Response) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// ErrorResponse represents a message returned when a request error occurs.
type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The error code.
	Code ErrorCode `protobuf:"varint,3,opt,name=code,proto3,enum=hagall.ErrorCode" json:"code,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ErrorResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ErrorResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ErrorResponse) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_UNKNOWN
}

// SyncClock represents a message periodically sent by a Hagall server to ping a
// client.
type SyncClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *SyncClock) Reset() {
	*x = SyncClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncClock) ProtoMessage() {}

func (x *SyncClock) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncClock.ProtoReflect.Descriptor instead.
func (*SyncClock) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{7}
}

func (x *SyncClock) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *SyncClock) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// SessionState represents a session state.
type SessionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The participants that joined the session.
	Participants []*Participant `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty"`
	// The entities present in the session.
	Entities []*Entity `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	// The entity components present in the session.
	EntityComponents []*EntityComponent `protobuf:"bytes,5,rep,name=entity_components,json=entityComponents,proto3" json:"entity_components,omitempty"`
}

func (x *SessionState) Reset() {
	*x = SessionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionState) ProtoMessage() {}

func (x *SessionState) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionState.ProtoReflect.Descriptor instead.
func (*SessionState) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{8}
}

func (x *SessionState) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *SessionState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SessionState) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *SessionState) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *SessionState) GetEntityComponents() []*EntityComponent {
	if x != nil {
		return x.EntityComponents
	}
	return nil
}

// ParticipantJoinRequest represents a message for a client to request joining a
// session.
//
// It returns an error when the request is sent while the participant is already
// in a session.
type ParticipantJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The id of the session to join. A new session is joined when this field is
	// left empty.
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ParticipantJoinRequest) Reset() {
	*x = ParticipantJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantJoinRequest) ProtoMessage() {}

func (x *ParticipantJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantJoinRequest.ProtoReflect.Descriptor instead.
func (*ParticipantJoinRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{9}
}

func (x *ParticipantJoinRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ParticipantJoinRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ParticipantJoinRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ParticipantJoinRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// ParticipantJoinResponse represents a message returned in response to a
// participant join request.
type ParticipantJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The id of the joined session.
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// The participant id given to the requester.
	ParticipantId uint32 `protobuf:"varint,4,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// The UUID of the session
	SessionUuid string `protobuf:"bytes,5,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
}

func (x *ParticipantJoinResponse) Reset() {
	*x = ParticipantJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantJoinResponse) ProtoMessage() {}

func (x *ParticipantJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantJoinResponse.ProtoReflect.Descriptor instead.
func (*ParticipantJoinResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{10}
}

func (x *ParticipantJoinResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ParticipantJoinResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ParticipantJoinResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ParticipantJoinResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ParticipantJoinResponse) GetParticipantId() uint32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

func (x *ParticipantJoinResponse) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

// ParticipantJoinBroadcast represents a message that notifies that a
// participant joined the current session.
type ParticipantJoinBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The id of the participant that joined the current session.
	ParticipantId uint32 `protobuf:"varint,4,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *ParticipantJoinBroadcast) Reset() {
	*x = ParticipantJoinBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantJoinBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantJoinBroadcast) ProtoMessage() {}

func (x *ParticipantJoinBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantJoinBroadcast.ProtoReflect.Descriptor instead.
func (*ParticipantJoinBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{11}
}

func (x *ParticipantJoinBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ParticipantJoinBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ParticipantJoinBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *ParticipantJoinBroadcast) GetParticipantId() uint32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

// ParticipantLeaveRequest represents a message for a client to leave the
// current session.
type ParticipantLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ParticipantLeaveRequest) Reset() {
	*x = ParticipantLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLeaveRequest) ProtoMessage() {}

func (x *ParticipantLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLeaveRequest.ProtoReflect.Descriptor instead.
func (*ParticipantLeaveRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{12}
}

func (x *ParticipantLeaveRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ParticipantLeaveRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ParticipantLeaveRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// ParticipantLeaveRequest represents a message that notifies that a participant
// left the current session.
type ParticipantLeaveBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The id of the participant that left the session.
	ParticipantId uint32 `protobuf:"varint,4,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *ParticipantLeaveBroadcast) Reset() {
	*x = ParticipantLeaveBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantLeaveBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantLeaveBroadcast) ProtoMessage() {}

func (x *ParticipantLeaveBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantLeaveBroadcast.ProtoReflect.Descriptor instead.
func (*ParticipantLeaveBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{13}
}

func (x *ParticipantLeaveBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ParticipantLeaveBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ParticipantLeaveBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *ParticipantLeaveBroadcast) GetParticipantId() uint32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

// EntityAddRequest represents a message to add an entity into the current
// session.
type EntityAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The initial pose of the entity.
	Pose *Pose `protobuf:"bytes,3,opt,name=pose,proto3" json:"pose,omitempty"`
	// A boolean that reports whether the entity is deleted when its owner
	// (a participant) leaves the current session.
	Persist bool `protobuf:"varint,4,opt,name=persist,proto3" json:"persist,omitempty"`
	// The entity flag that gives context to the entity.
	Flag EntityFlag `protobuf:"varint,5,opt,name=flag,proto3,enum=hagall.EntityFlag" json:"flag,omitempty"`
}

func (x *EntityAddRequest) Reset() {
	*x = EntityAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAddRequest) ProtoMessage() {}

func (x *EntityAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAddRequest.ProtoReflect.Descriptor instead.
func (*EntityAddRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{14}
}

func (x *EntityAddRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityAddRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityAddRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityAddRequest) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

func (x *EntityAddRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

func (x *EntityAddRequest) GetFlag() EntityFlag {
	if x != nil {
		return x.Flag
	}
	return EntityFlag_ENTITY_FLAG_EMPTY
}

// EntityAddResponse represents a message returned in response to an entity add
// request.
type EntityAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityAddResponse) Reset() {
	*x = EntityAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAddResponse) ProtoMessage() {}

func (x *EntityAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAddResponse.ProtoReflect.Descriptor instead.
func (*EntityAddResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{15}
}

func (x *EntityAddResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityAddResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityAddResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityAddResponse) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

// EntityAddBroadcast represents a message that notifies that an entity has been
// added to the current session.
type EntityAddBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The added entity.
	Entity *Entity `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *EntityAddBroadcast) Reset() {
	*x = EntityAddBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityAddBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityAddBroadcast) ProtoMessage() {}

func (x *EntityAddBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityAddBroadcast.ProtoReflect.Descriptor instead.
func (*EntityAddBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{16}
}

func (x *EntityAddBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityAddBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityAddBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityAddBroadcast) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

// EntityDeleteRequest represents a message to delete an entity from the current
// session.
type EntityDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityDeleteRequest) Reset() {
	*x = EntityDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDeleteRequest) ProtoMessage() {}

func (x *EntityDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDeleteRequest.ProtoReflect.Descriptor instead.
func (*EntityDeleteRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{17}
}

func (x *EntityDeleteRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityDeleteRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityDeleteRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityDeleteRequest) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

// EntityDeleteResponse represents a message returned in response to an entity
// delete request.
//
// Clients should also delete the resources associated with the entity, such as
// asset instances.
type EntityDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EntityDeleteResponse) Reset() {
	*x = EntityDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDeleteResponse) ProtoMessage() {}

func (x *EntityDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDeleteResponse.ProtoReflect.Descriptor instead.
func (*EntityDeleteResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{18}
}

func (x *EntityDeleteResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityDeleteResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityDeleteResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// EntityDeleteBroadcast represents a message that notifies that an entity has
// been deleted from the current session.
//
// Clients should also delete the resources associated with the entity, such as
// asset instances.
type EntityDeleteBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The id of the deleted entity.
	EntityId uint32 `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityDeleteBroadcast) Reset() {
	*x = EntityDeleteBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityDeleteBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityDeleteBroadcast) ProtoMessage() {}

func (x *EntityDeleteBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityDeleteBroadcast.ProtoReflect.Descriptor instead.
func (*EntityDeleteBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{19}
}

func (x *EntityDeleteBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityDeleteBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityDeleteBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityDeleteBroadcast) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

// EntityUpdatePoseRequest represents a message to update an entity pose in the
// current session.
type EntityUpdatePose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id of the entity to update.
	EntityId uint32 `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The updated entity pose.
	Pose *Pose `protobuf:"bytes,4,opt,name=pose,proto3" json:"pose,omitempty"`
}

func (x *EntityUpdatePose) Reset() {
	*x = EntityUpdatePose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityUpdatePose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityUpdatePose) ProtoMessage() {}

func (x *EntityUpdatePose) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityUpdatePose.ProtoReflect.Descriptor instead.
func (*EntityUpdatePose) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{20}
}

func (x *EntityUpdatePose) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityUpdatePose) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityUpdatePose) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityUpdatePose) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

// EntityUpdatePoseBroadcast represents a message that notifies an entity pose
// update within the current session.
type EntityUpdatePoseBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The updated pose.
	Pose *Pose `protobuf:"bytes,5,opt,name=pose,proto3" json:"pose,omitempty"`
}

func (x *EntityUpdatePoseBroadcast) Reset() {
	*x = EntityUpdatePoseBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityUpdatePoseBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityUpdatePoseBroadcast) ProtoMessage() {}

func (x *EntityUpdatePoseBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityUpdatePoseBroadcast.ProtoReflect.Descriptor instead.
func (*EntityUpdatePoseBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{21}
}

func (x *EntityUpdatePoseBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityUpdatePoseBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityUpdatePoseBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityUpdatePoseBroadcast) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityUpdatePoseBroadcast) GetPose() *Pose {
	if x != nil {
		return x.Pose
	}
	return nil
}

// CustomMessage represents a message to send a custom message to one or many
// other participants.
type CustomMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The ids of the participants who will receive the message. The message is
	// sent to all participants when empty.
	ParticipantIds []uint32 `protobuf:"varint,3,rep,packed,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`
	// The message body.
	Body []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CustomMessage) Reset() {
	*x = CustomMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMessage) ProtoMessage() {}

func (x *CustomMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMessage.ProtoReflect.Descriptor instead.
func (*CustomMessage) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{22}
}

func (x *CustomMessage) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *CustomMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CustomMessage) GetParticipantIds() []uint32 {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *CustomMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// CustomMessageBroadcast represents a message that notifies a participant that
// a custom message has been sent.
type CustomMessageBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The id of the participant that sent the message.
	ParticipantId uint32 `protobuf:"varint,4,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// The message body.
	Body []byte `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CustomMessageBroadcast) Reset() {
	*x = CustomMessageBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMessageBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMessageBroadcast) ProtoMessage() {}

func (x *CustomMessageBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMessageBroadcast.ProtoReflect.Descriptor instead.
func (*CustomMessageBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{23}
}

func (x *CustomMessageBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *CustomMessageBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CustomMessageBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *CustomMessageBroadcast) GetParticipantId() uint32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

func (x *CustomMessageBroadcast) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// An entity component.
type EntityComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,1,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The component data.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityComponent) Reset() {
	*x = EntityComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponent) ProtoMessage() {}

func (x *EntityComponent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponent.ProtoReflect.Descriptor instead.
func (*EntityComponent) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{24}
}

func (x *EntityComponent) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

func (x *EntityComponent) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityComponent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityComponentTypeAddRequest represents a message for a client to add and
// entity component type. It returns an error when the named entity component
// type has already been added.
type EntityComponentTypeAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type name.
	EntityComponentTypeName string `protobuf:"bytes,3,opt,name=entity_component_type_name,json=entityComponentTypeName,proto3" json:"entity_component_type_name,omitempty"`
}

func (x *EntityComponentTypeAddRequest) Reset() {
	*x = EntityComponentTypeAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeAddRequest) ProtoMessage() {}

func (x *EntityComponentTypeAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeAddRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeAddRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{25}
}

func (x *EntityComponentTypeAddRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeAddRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeAddRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeAddRequest) GetEntityComponentTypeName() string {
	if x != nil {
		return x.EntityComponentTypeName
	}
	return ""
}

// EntityComponentTypeAddResponse represents a message returned in response to
// an entity component type add request.
type EntityComponentTypeAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentTypeAddResponse) Reset() {
	*x = EntityComponentTypeAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeAddResponse) ProtoMessage() {}

func (x *EntityComponentTypeAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeAddResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeAddResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{26}
}

func (x *EntityComponentTypeAddResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeAddResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeAddResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeAddResponse) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentTypeGetNameRequest represents a message for a client to
// request a component name. It returns an error when there is no entity
// component type with the given entity component id.
type EntityComponentTypeGetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentTypeGetNameRequest) Reset() {
	*x = EntityComponentTypeGetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeGetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeGetNameRequest) ProtoMessage() {}

func (x *EntityComponentTypeGetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeGetNameRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeGetNameRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{27}
}

func (x *EntityComponentTypeGetNameRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeGetNameRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeGetNameRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeGetNameRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentTypeGetNameResponse represents a message returned in response
// to a get entity component type name request.
type EntityComponentTypeGetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type name.
	EntityComponentTypeName string `protobuf:"bytes,3,opt,name=entity_component_type_name,json=entityComponentTypeName,proto3" json:"entity_component_type_name,omitempty"`
}

func (x *EntityComponentTypeGetNameResponse) Reset() {
	*x = EntityComponentTypeGetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeGetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeGetNameResponse) ProtoMessage() {}

func (x *EntityComponentTypeGetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeGetNameResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeGetNameResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{28}
}

func (x *EntityComponentTypeGetNameResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeGetNameResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeGetNameResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeGetNameResponse) GetEntityComponentTypeName() string {
	if x != nil {
		return x.EntityComponentTypeName
	}
	return ""
}

// EntityComponentTypeGetIdRequest represents a message for a client to request
// a component id. It returns an error when there is no component registered
// with the given name.
type EntityComponentTypeGetIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type name.
	EntityComponentTypeName string `protobuf:"bytes,3,opt,name=entity_component_type_name,json=entityComponentTypeName,proto3" json:"entity_component_type_name,omitempty"`
}

func (x *EntityComponentTypeGetIdRequest) Reset() {
	*x = EntityComponentTypeGetIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeGetIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeGetIdRequest) ProtoMessage() {}

func (x *EntityComponentTypeGetIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeGetIdRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeGetIdRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{29}
}

func (x *EntityComponentTypeGetIdRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeGetIdRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeGetIdRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeGetIdRequest) GetEntityComponentTypeName() string {
	if x != nil {
		return x.EntityComponentTypeName
	}
	return ""
}

// EntityComponentTypeGetIdResponse represents a message returned in response to
// a get entity component type id request.
type EntityComponentTypeGetIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentTypeGetIdResponse) Reset() {
	*x = EntityComponentTypeGetIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeGetIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeGetIdResponse) ProtoMessage() {}

func (x *EntityComponentTypeGetIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeGetIdResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeGetIdResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{30}
}

func (x *EntityComponentTypeGetIdResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeGetIdResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeGetIdResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeGetIdResponse) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentAddRequest represents a message for a client to add an entity
// component. It returns an error when an entity does not exist or when an
// entity component is not registered.
type EntityComponentAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The component data.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityComponentAddRequest) Reset() {
	*x = EntityComponentAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentAddRequest) ProtoMessage() {}

func (x *EntityComponentAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentAddRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentAddRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{31}
}

func (x *EntityComponentAddRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentAddRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentAddRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentAddRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

func (x *EntityComponentAddRequest) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityComponentAddRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityComponentAddResponse represents a message returned in response to an
// add entity component id request.
type EntityComponentAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EntityComponentAddResponse) Reset() {
	*x = EntityComponentAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentAddResponse) ProtoMessage() {}

func (x *EntityComponentAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentAddResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentAddResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{32}
}

func (x *EntityComponentAddResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentAddResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentAddResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// EntityComponentAddBroadcast represents a message that notifies that an entity
// component has been added.
type EntityComponentAddBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The entity component.
	EntityComponent *EntityComponent `protobuf:"bytes,4,opt,name=entity_component,json=entityComponent,proto3" json:"entity_component,omitempty"`
}

func (x *EntityComponentAddBroadcast) Reset() {
	*x = EntityComponentAddBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentAddBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentAddBroadcast) ProtoMessage() {}

func (x *EntityComponentAddBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentAddBroadcast.ProtoReflect.Descriptor instead.
func (*EntityComponentAddBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{33}
}

func (x *EntityComponentAddBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentAddBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentAddBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityComponentAddBroadcast) GetEntityComponent() *EntityComponent {
	if x != nil {
		return x.EntityComponent
	}
	return nil
}

// EntityComponentDeleteRequest represents a message for a client to delete an
// entity component.
type EntityComponentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *EntityComponentDeleteRequest) Reset() {
	*x = EntityComponentDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentDeleteRequest) ProtoMessage() {}

func (x *EntityComponentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentDeleteRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{34}
}

func (x *EntityComponentDeleteRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentDeleteRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentDeleteRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentDeleteRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

func (x *EntityComponentDeleteRequest) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

// EntityComponentDeleteResponse represents a message returned in response to a
// delete entity component id request.
type EntityComponentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EntityComponentDeleteResponse) Reset() {
	*x = EntityComponentDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentDeleteResponse) ProtoMessage() {}

func (x *EntityComponentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentDeleteResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{35}
}

func (x *EntityComponentDeleteResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentDeleteResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentDeleteResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// EntityComponentDeleteBroadcast represents a message that notifies that an
// entity component has been deleted.
type EntityComponentDeleteBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The entity component.
	EntityComponent *EntityComponent `protobuf:"bytes,4,opt,name=entity_component,json=entityComponent,proto3" json:"entity_component,omitempty"`
}

func (x *EntityComponentDeleteBroadcast) Reset() {
	*x = EntityComponentDeleteBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentDeleteBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentDeleteBroadcast) ProtoMessage() {}

func (x *EntityComponentDeleteBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentDeleteBroadcast.ProtoReflect.Descriptor instead.
func (*EntityComponentDeleteBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{36}
}

func (x *EntityComponentDeleteBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentDeleteBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentDeleteBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityComponentDeleteBroadcast) GetEntityComponent() *EntityComponent {
	if x != nil {
		return x.EntityComponent
	}
	return nil
}

// EntityComponentUpdate represents a message to update an added entity
// component. The update is silently aborted when the entity component has not
// been previously added.
type EntityComponentUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
	// The entity id.
	EntityId uint32 `protobuf:"varint,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// The component data.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EntityComponentUpdate) Reset() {
	*x = EntityComponentUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentUpdate) ProtoMessage() {}

func (x *EntityComponentUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentUpdate.ProtoReflect.Descriptor instead.
func (*EntityComponentUpdate) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{37}
}

func (x *EntityComponentUpdate) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentUpdate) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

func (x *EntityComponentUpdate) GetEntityId() uint32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *EntityComponentUpdate) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// EntityComponentUpdateBroadcast represents a message that notifies that an
// entity component has been updated.
type EntityComponentUpdateBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The timestamp of the request that triggered the broadcast.
	OriginTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=origin_timestamp,json=originTimestamp,proto3" json:"origin_timestamp,omitempty"`
	// The entity component id.
	EntityComponent *EntityComponent `protobuf:"bytes,4,opt,name=entity_component,json=entityComponent,proto3" json:"entity_component,omitempty"`
}

func (x *EntityComponentUpdateBroadcast) Reset() {
	*x = EntityComponentUpdateBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentUpdateBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentUpdateBroadcast) ProtoMessage() {}

func (x *EntityComponentUpdateBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentUpdateBroadcast.ProtoReflect.Descriptor instead.
func (*EntityComponentUpdateBroadcast) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{38}
}

func (x *EntityComponentUpdateBroadcast) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentUpdateBroadcast) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentUpdateBroadcast) GetOriginTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginTimestamp
	}
	return nil
}

func (x *EntityComponentUpdateBroadcast) GetEntityComponent() *EntityComponent {
	if x != nil {
		return x.EntityComponent
	}
	return nil
}

// EntityComponentListRequest represents a message for a client to request a
// list of entity components.
type EntityComponentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The component entity type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentListRequest) Reset() {
	*x = EntityComponentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentListRequest) ProtoMessage() {}

func (x *EntityComponentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentListRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentListRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{39}
}

func (x *EntityComponentListRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentListRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentListRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentListRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentListResponse represents a message returned in response to a
// list entity component request.
type EntityComponentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component list.
	EntityComponents []*EntityComponent `protobuf:"bytes,3,rep,name=entity_components,json=entityComponents,proto3" json:"entity_components,omitempty"`
}

func (x *EntityComponentListResponse) Reset() {
	*x = EntityComponentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentListResponse) ProtoMessage() {}

func (x *EntityComponentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentListResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentListResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{40}
}

func (x *EntityComponentListResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentListResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentListResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentListResponse) GetEntityComponents() []*EntityComponent {
	if x != nil {
		return x.EntityComponents
	}
	return nil
}

// EntityComponentTypeSubscribeRequest represents a message to subscribe to
// entity components type broadcasts.
type EntityComponentTypeSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentTypeSubscribeRequest) Reset() {
	*x = EntityComponentTypeSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeSubscribeRequest) ProtoMessage() {}

func (x *EntityComponentTypeSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeSubscribeRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{41}
}

func (x *EntityComponentTypeSubscribeRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeSubscribeRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeSubscribeRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeSubscribeRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentTypeSubscribeResponse represents a message returned in
// response to an entity component type subscription.
type EntityComponentTypeSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EntityComponentTypeSubscribeResponse) Reset() {
	*x = EntityComponentTypeSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeSubscribeResponse) ProtoMessage() {}

func (x *EntityComponentTypeSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeSubscribeResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{42}
}

func (x *EntityComponentTypeSubscribeResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeSubscribeResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeSubscribeResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// EntityComponentTypeUnsubscribeRequest represents a message to unsubscribe to
// entity component type subscriptions.
type EntityComponentTypeUnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The entity component type id.
	EntityComponentTypeId uint32 `protobuf:"varint,3,opt,name=entity_component_type_id,json=entityComponentTypeId,proto3" json:"entity_component_type_id,omitempty"`
}

func (x *EntityComponentTypeUnsubscribeRequest) Reset() {
	*x = EntityComponentTypeUnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeUnsubscribeRequest) ProtoMessage() {}

func (x *EntityComponentTypeUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{43}
}

func (x *EntityComponentTypeUnsubscribeRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeUnsubscribeRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeUnsubscribeRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *EntityComponentTypeUnsubscribeRequest) GetEntityComponentTypeId() uint32 {
	if x != nil {
		return x.EntityComponentTypeId
	}
	return 0
}

// EntityComponentTypeUnsubscribeResponse represents a message returned in
// response to an entity component type unsubscribe request.
type EntityComponentTypeUnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EntityComponentTypeUnsubscribeResponse) Reset() {
	*x = EntityComponentTypeUnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityComponentTypeUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityComponentTypeUnsubscribeResponse) ProtoMessage() {}

func (x *EntityComponentTypeUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityComponentTypeUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*EntityComponentTypeUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{44}
}

func (x *EntityComponentTypeUnsubscribeResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *EntityComponentTypeUnsubscribeResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EntityComponentTypeUnsubscribeResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

// ReceiptRequest represents a message sent by the SDK to the Hagall
// containing proof of work receipt, with hash and signature
// to be passed on to NetworkCreditService
type ReceiptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// proof of work receipt, serialized to json string
	Receipt string `protobuf:"bytes,3,opt,name=receipt,proto3" json:"receipt,omitempty"`
	// hash of the receipt
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	// signature of the receipt, signed by App's private ECDSA key
	Signature []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ReceiptRequest) Reset() {
	*x = ReceiptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptRequest) ProtoMessage() {}

func (x *ReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptRequest.ProtoReflect.Descriptor instead.
func (*ReceiptRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{45}
}

func (x *ReceiptRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ReceiptRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ReceiptRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ReceiptRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *ReceiptRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ReceiptRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// ReceiptResponse represents a message returned in response to a receipt
// request
type ReceiptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message.
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ReceiptResponse) Reset() {
	*x = ReceiptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptResponse) ProtoMessage() {}

func (x *ReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptResponse.ProtoReflect.Descriptor instead.
func (*ReceiptResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{46}
}

func (x *ReceiptResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *ReceiptResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ReceiptResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type SignedPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId         uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	NumberOfIteration uint32 `protobuf:"varint,3,opt,name=number_of_iteration,json=numberOfIteration,proto3" json:"number_of_iteration,omitempty"`
}

func (x *SignedPingRequest) Reset() {
	*x = SignedPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPingRequest) ProtoMessage() {}

func (x *SignedPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPingRequest.ProtoReflect.Descriptor instead.
func (*SignedPingRequest) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{47}
}

func (x *SignedPingRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *SignedPingRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SignedPingRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SignedPingRequest) GetNumberOfIteration() uint32 {
	if x != nil {
		return x.NumberOfIteration
	}
	return 0
}

type SignedPingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the message
	Type MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=hagall.MsgType" json:"type,omitempty"`
	// The time the message is sent.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The id that identifies a request.
	RequestId uint32 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The latency data
	Data *LatencyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// Signature of the msg
	Sig string `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *SignedPingResponse) Reset() {
	*x = SignedPingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedPingResponse) ProtoMessage() {}

func (x *SignedPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedPingResponse.ProtoReflect.Descriptor instead.
func (*SignedPingResponse) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{48}
}

func (x *SignedPingResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *SignedPingResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SignedPingResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SignedPingResponse) GetData() *LatencyData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignedPingResponse) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

type LatencyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The creation timestamp of the latency data
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Minimum latency value
	Min float64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum latency value
	Max float64 `protobuf:"fixed64,3,opt,name=max,proto3" json:"max,omitempty"`
	// Mean (average) latency value
	Mean float64 `protobuf:"fixed64,4,opt,name=mean,proto3" json:"mean,omitempty"`
	// 95th percentile latency value
	P95 float64 `protobuf:"fixed64,5,opt,name=p95,proto3" json:"p95,omitempty"`
	// Identifier for the session
	SessionId string `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Identifier for the client
	ClientId string `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Wallet address of the client
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *LatencyData) Reset() {
	*x = LatencyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_hagallpb_hagall_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatencyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyData) ProtoMessage() {}

func (x *LatencyData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_hagallpb_hagall_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyData.ProtoReflect.Descriptor instead.
func (*LatencyData) Descriptor() ([]byte, []int) {
	return file_messages_hagallpb_hagall_proto_rawDescGZIP(), []int{49}
}

func (x *LatencyData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LatencyData) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LatencyData) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *LatencyData) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *LatencyData) GetP95() float64 {
	if x != nil {
		return x.P95
	}
	return 0
}

func (x *LatencyData) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LatencyData) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LatencyData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_messages_hagallpb_hagall_proto protoreflect.FileDescriptor

var file_messages_hagallpb_hagall_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x70, 0x62, 0x2f, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x22, 0x76, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x70, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x70, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x70, 0x7a, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x72, 0x7a, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x72, 0x77, 0x22, 0x64, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x89, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61,
	0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x6a, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x98, 0x02,
	0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x81, 0x02, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61,
	0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x18, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x98, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61,
	0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x19, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0xaf, 0x01,
	0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0xe2, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0xda, 0x01, 0x0a, 0x15, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb0, 0x01,
	0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x65,
	0x22, 0x80, 0x02, 0x0a, 0x19, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a,
	0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x04, 0x70,
	0x6f, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0xf9, 0x01, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x7b, 0x0a,
	0x0f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x1d, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x1e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61,
	0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x21, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c,
	0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0xe0, 0x01, 0x0a, 0x22, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x1f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x20, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c,
	0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0x84, 0x02, 0x0a, 0x19, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x1a, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x1b, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x42, 0x0a, 0x10,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x22, 0xf3, 0x01, 0x0a, 0x1c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x1e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x42, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68,
	0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a,
	0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x02, 0x0a, 0x1e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c,
	0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x42, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x67,
	0x61, 0x6c, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x1a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x1b,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61,
	0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x10,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xdd, 0x01, 0x0a, 0x23, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x22, 0xa5, 0x01, 0x0a, 0x24, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c,
	0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x25, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x26, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61,
	0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0xe8, 0x01, 0x0a, 0x0b,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x39, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x39, 0x35,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x47, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x46,
	0x4c, 0x41, 0x47, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x01, 0x2a,
	0x9e, 0x0e, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d,
	0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x25, 0x0a,
	0x21, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49,
	0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43,
	0x41, 0x53, 0x54, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x45,
	0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x28, 0x0a,
	0x24, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x42, 0x52, 0x4f, 0x41,
	0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x53, 0x47, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x09, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x53,
	0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x44,
	0x44, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x0a, 0x12, 0x22, 0x0a,
	0x1e, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x0b, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0c, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x0d, 0x12, 0x1f, 0x0a, 0x1b,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x45, 0x10, 0x0e, 0x12, 0x29, 0x0a,
	0x25, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x42, 0x52, 0x4f,
	0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x0f, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x10, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x11, 0x12, 0x2e, 0x0a, 0x2a,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x44, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x12, 0x12, 0x2f, 0x0a, 0x2b,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x44, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x13, 0x12, 0x33, 0x0a,
	0x2f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x14, 0x12, 0x34, 0x0a, 0x30, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x15, 0x12, 0x31, 0x0a, 0x2d, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x49,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x16, 0x12, 0x32, 0x0a, 0x2e, 0x4d,
	0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x17, 0x12,
	0x29, 0x0a, 0x25, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x18, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x53,
	0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x19, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x1a, 0x12, 0x2c, 0x0a, 0x28, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x1b, 0x12, 0x2d, 0x0a, 0x29, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x1c,
	0x12, 0x2e, 0x0a, 0x2a, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54,
	0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x1d,
	0x12, 0x24, 0x0a, 0x20, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54,
	0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x1e, 0x12, 0x2e, 0x0a, 0x2a, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e,
	0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44,
	0x43, 0x41, 0x53, 0x54, 0x10, 0x1f, 0x12, 0x2a, 0x0a, 0x26, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e,
	0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x20, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x21, 0x12,
	0x34, 0x0a, 0x30, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x22, 0x12, 0x35, 0x0a, 0x31, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x23, 0x12, 0x36, 0x0a, 0x32,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x24, 0x12, 0x37, 0x0a, 0x33, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x42, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x25, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x26, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x27, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x28, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x43, 0x45, 0x49, 0x50, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x29, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x2a, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x2b, 0x22, 0x08, 0x08, 0x64, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07,
	0x2a, 0xe3, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x90, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x91,
	0x03, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x94, 0x03, 0x12, 0x18, 0x0a, 0x13,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c,
	0x49, 0x43, 0x54, 0x10, 0x99, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x9d,
	0x03, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0xcc, 0x03, 0x12, 0x26, 0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x45, 0x44, 0x10, 0xcd, 0x03, 0x12, 0x25, 0x0a,
	0x20, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xf4, 0x03, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x45, 0x44, 0x10, 0xf5, 0x03, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x42,
	0x55, 0x53, 0x59, 0x10, 0xf7, 0x03, 0x42, 0x42, 0x5a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2f, 0x68, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x70, 0x62, 0xa2, 0x02, 0x06, 0x48, 0x61,
	0x67, 0x61, 0x6c, 0x6c, 0xaa, 0x02, 0x23, 0x41, 0x75, 0x6b, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6a,
	0x75, 0x72, 0x65, 0x4b, 0x69, 0x74, 0x2e, 0x48, 0x61, 0x67, 0x61, 0x6c, 0x6c, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_messages_hagallpb_hagall_proto_rawDescOnce sync.Once
	file_messages_hagallpb_hagall_proto_rawDescData = file_messages_hagallpb_hagall_proto_rawDesc
)

func file_messages_hagallpb_hagall_proto_rawDescGZIP() []byte {
	file_messages_hagallpb_hagall_proto_rawDescOnce.Do(func() {
		file_messages_hagallpb_hagall_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_hagallpb_hagall_proto_rawDescData)
	})
	return file_messages_hagallpb_hagall_proto_rawDescData
}

var file_messages_hagallpb_hagall_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_hagallpb_hagall_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_messages_hagallpb_hagall_proto_goTypes = []interface{}{
	(EntityFlag)(0),                                // 0: hagall.EntityFlag
	(MsgType)(0),                                   // 1: hagall.MsgType
	(ErrorCode)(0),                                 // 2: hagall.ErrorCode
	(*Participant)(nil),                            // 3: hagall.Participant
	(*Entity)(nil),                                 // 4: hagall.Entity
	(*Pose)(nil),                                   // 5: hagall.Pose
	(*Msg)(nil),                                    // 6: hagall.Msg
	(*Request)(nil),                                // 7: hagall.Request
	(*Response)(nil),                               // 8: hagall.Response
	(*ErrorResponse)(nil),                          // 9: hagall.ErrorResponse
	(*SyncClock)(nil),                              // 10: hagall.SyncClock
	(*SessionState)(nil),                           // 11: hagall.SessionState
	(*ParticipantJoinRequest)(nil),                 // 12: hagall.ParticipantJoinRequest
	(*ParticipantJoinResponse)(nil),                // 13: hagall.ParticipantJoinResponse
	(*ParticipantJoinBroadcast)(nil),               // 14: hagall.ParticipantJoinBroadcast
	(*ParticipantLeaveRequest)(nil),                // 15: hagall.ParticipantLeaveRequest
	(*ParticipantLeaveBroadcast)(nil),              // 16: hagall.ParticipantLeaveBroadcast
	(*EntityAddRequest)(nil),                       // 17: hagall.EntityAddRequest
	(*EntityAddResponse)(nil),                      // 18: hagall.EntityAddResponse
	(*EntityAddBroadcast)(nil),                     // 19: hagall.EntityAddBroadcast
	(*EntityDeleteRequest)(nil),                    // 20: hagall.EntityDeleteRequest
	(*EntityDeleteResponse)(nil),                   // 21: hagall.EntityDeleteResponse
	(*EntityDeleteBroadcast)(nil),                  // 22: hagall.EntityDeleteBroadcast
	(*EntityUpdatePose)(nil),                       // 23: hagall.EntityUpdatePose
	(*EntityUpdatePoseBroadcast)(nil),              // 24: hagall.EntityUpdatePoseBroadcast
	(*CustomMessage)(nil),                          // 25: hagall.CustomMessage
	(*CustomMessageBroadcast)(nil),                 // 26: hagall.CustomMessageBroadcast
	(*EntityComponent)(nil),                        // 27: hagall.EntityComponent
	(*EntityComponentTypeAddRequest)(nil),          // 28: hagall.EntityComponentTypeAddRequest
	(*EntityComponentTypeAddResponse)(nil),         // 29: hagall.EntityComponentTypeAddResponse
	(*EntityComponentTypeGetNameRequest)(nil),      // 30: hagall.EntityComponentTypeGetNameRequest
	(*EntityComponentTypeGetNameResponse)(nil),     // 31: hagall.EntityComponentTypeGetNameResponse
	(*EntityComponentTypeGetIdRequest)(nil),        // 32: hagall.EntityComponentTypeGetIdRequest
	(*EntityComponentTypeGetIdResponse)(nil),       // 33: hagall.EntityComponentTypeGetIdResponse
	(*EntityComponentAddRequest)(nil),              // 34: hagall.EntityComponentAddRequest
	(*EntityComponentAddResponse)(nil),             // 35: hagall.EntityComponentAddResponse
	(*EntityComponentAddBroadcast)(nil),            // 36: hagall.EntityComponentAddBroadcast
	(*EntityComponentDeleteRequest)(nil),           // 37: hagall.EntityComponentDeleteRequest
	(*EntityComponentDeleteResponse)(nil),          // 38: hagall.EntityComponentDeleteResponse
	(*EntityComponentDeleteBroadcast)(nil),         // 39: hagall.EntityComponentDeleteBroadcast
	(*EntityComponentUpdate)(nil),                  // 40: hagall.EntityComponentUpdate
	(*EntityComponentUpdateBroadcast)(nil),         // 41: hagall.EntityComponentUpdateBroadcast
	(*EntityComponentListRequest)(nil),             // 42: hagall.EntityComponentListRequest
	(*EntityComponentListResponse)(nil),            // 43: hagall.EntityComponentListResponse
	(*EntityComponentTypeSubscribeRequest)(nil),    // 44: hagall.EntityComponentTypeSubscribeRequest
	(*EntityComponentTypeSubscribeResponse)(nil),   // 45: hagall.EntityComponentTypeSubscribeResponse
	(*EntityComponentTypeUnsubscribeRequest)(nil),  // 46: hagall.EntityComponentTypeUnsubscribeRequest
	(*EntityComponentTypeUnsubscribeResponse)(nil), // 47: hagall.EntityComponentTypeUnsubscribeResponse
	(*ReceiptRequest)(nil),                         // 48: hagall.ReceiptRequest
	(*ReceiptResponse)(nil),                        // 49: hagall.ReceiptResponse
	(*SignedPingRequest)(nil),                      // 50: hagall.SignedPingRequest
	(*SignedPingResponse)(nil),                     // 51: hagall.SignedPingResponse
	(*LatencyData)(nil),                            // 52: hagall.LatencyData
	(*timestamppb.Timestamp)(nil),                  // 53: google.protobuf.Timestamp
}
var file_messages_hagallpb_hagall_proto_depIdxs = []int32{
	5,   // 0: hagall.Entity.pose:type_name -> hagall.Pose
	0,   // 1: hagall.Entity.flag:type_name -> hagall.EntityFlag
	1,   // 2: hagall.Msg.type:type_name -> hagall.MsgType
	53,  // 3: hagall.Msg.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 4: hagall.Request.type:type_name -> hagall.MsgType
	53,  // 5: hagall.Request.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 6: hagall.Response.type:type_name -> hagall.MsgType
	53,  // 7: hagall.Response.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 8: hagall.ErrorResponse.type:type_name -> hagall.MsgType
	53,  // 9: hagall.ErrorResponse.timestamp:type_name -> google.protobuf.Timestamp
	2,   // 10: hagall.ErrorResponse.code:type_name -> hagall.ErrorCode
	1,   // 11: hagall.SyncClock.type:type_name -> hagall.MsgType
	53,  // 12: hagall.SyncClock.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 13: hagall.SessionState.type:type_name -> hagall.MsgType
	53,  // 14: hagall.SessionState.timestamp:type_name -> google.protobuf.Timestamp
	3,   // 15: hagall.SessionState.participants:type_name -> hagall.Participant
	4,   // 16: hagall.SessionState.entities:type_name -> hagall.Entity
	27,  // 17: hagall.SessionState.entity_components:type_name -> hagall.EntityComponent
	1,   // 18: hagall.ParticipantJoinRequest.type:type_name -> hagall.MsgType
	53,  // 19: hagall.ParticipantJoinRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 20: hagall.ParticipantJoinResponse.type:type_name -> hagall.MsgType
	53,  // 21: hagall.ParticipantJoinResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 22: hagall.ParticipantJoinBroadcast.type:type_name -> hagall.MsgType
	53,  // 23: hagall.ParticipantJoinBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 24: hagall.ParticipantJoinBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	1,   // 25: hagall.ParticipantLeaveRequest.type:type_name -> hagall.MsgType
	53,  // 26: hagall.ParticipantLeaveRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 27: hagall.ParticipantLeaveBroadcast.type:type_name -> hagall.MsgType
	53,  // 28: hagall.ParticipantLeaveBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 29: hagall.ParticipantLeaveBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	1,   // 30: hagall.EntityAddRequest.type:type_name -> hagall.MsgType
	53,  // 31: hagall.EntityAddRequest.timestamp:type_name -> google.protobuf.Timestamp
	5,   // 32: hagall.EntityAddRequest.pose:type_name -> hagall.Pose
	0,   // 33: hagall.EntityAddRequest.flag:type_name -> hagall.EntityFlag
	1,   // 34: hagall.EntityAddResponse.type:type_name -> hagall.MsgType
	53,  // 35: hagall.EntityAddResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 36: hagall.EntityAddBroadcast.type:type_name -> hagall.MsgType
	53,  // 37: hagall.EntityAddBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 38: hagall.EntityAddBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	4,   // 39: hagall.EntityAddBroadcast.entity:type_name -> hagall.Entity
	1,   // 40: hagall.EntityDeleteRequest.type:type_name -> hagall.MsgType
	53,  // 41: hagall.EntityDeleteRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 42: hagall.EntityDeleteResponse.type:type_name -> hagall.MsgType
	53,  // 43: hagall.EntityDeleteResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 44: hagall.EntityDeleteBroadcast.type:type_name -> hagall.MsgType
	53,  // 45: hagall.EntityDeleteBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 46: hagall.EntityDeleteBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	1,   // 47: hagall.EntityUpdatePose.type:type_name -> hagall.MsgType
	53,  // 48: hagall.EntityUpdatePose.timestamp:type_name -> google.protobuf.Timestamp
	5,   // 49: hagall.EntityUpdatePose.pose:type_name -> hagall.Pose
	1,   // 50: hagall.EntityUpdatePoseBroadcast.type:type_name -> hagall.MsgType
	53,  // 51: hagall.EntityUpdatePoseBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 52: hagall.EntityUpdatePoseBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	5,   // 53: hagall.EntityUpdatePoseBroadcast.pose:type_name -> hagall.Pose
	1,   // 54: hagall.CustomMessage.type:type_name -> hagall.MsgType
	53,  // 55: hagall.CustomMessage.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 56: hagall.CustomMessageBroadcast.type:type_name -> hagall.MsgType
	53,  // 57: hagall.CustomMessageBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 58: hagall.CustomMessageBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	1,   // 59: hagall.EntityComponentTypeAddRequest.type:type_name -> hagall.MsgType
	53,  // 60: hagall.EntityComponentTypeAddRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 61: hagall.EntityComponentTypeAddResponse.type:type_name -> hagall.MsgType
	53,  // 62: hagall.EntityComponentTypeAddResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 63: hagall.EntityComponentTypeGetNameRequest.type:type_name -> hagall.MsgType
	53,  // 64: hagall.EntityComponentTypeGetNameRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 65: hagall.EntityComponentTypeGetNameResponse.type:type_name -> hagall.MsgType
	53,  // 66: hagall.EntityComponentTypeGetNameResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 67: hagall.EntityComponentTypeGetIdRequest.type:type_name -> hagall.MsgType
	53,  // 68: hagall.EntityComponentTypeGetIdRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 69: hagall.EntityComponentTypeGetIdResponse.type:type_name -> hagall.MsgType
	53,  // 70: hagall.EntityComponentTypeGetIdResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 71: hagall.EntityComponentAddRequest.type:type_name -> hagall.MsgType
	53,  // 72: hagall.EntityComponentAddRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 73: hagall.EntityComponentAddResponse.type:type_name -> hagall.MsgType
	53,  // 74: hagall.EntityComponentAddResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 75: hagall.EntityComponentAddBroadcast.type:type_name -> hagall.MsgType
	53,  // 76: hagall.EntityComponentAddBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 77: hagall.EntityComponentAddBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	27,  // 78: hagall.EntityComponentAddBroadcast.entity_component:type_name -> hagall.EntityComponent
	1,   // 79: hagall.EntityComponentDeleteRequest.type:type_name -> hagall.MsgType
	53,  // 80: hagall.EntityComponentDeleteRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 81: hagall.EntityComponentDeleteResponse.type:type_name -> hagall.MsgType
	53,  // 82: hagall.EntityComponentDeleteResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 83: hagall.EntityComponentDeleteBroadcast.type:type_name -> hagall.MsgType
	53,  // 84: hagall.EntityComponentDeleteBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 85: hagall.EntityComponentDeleteBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	27,  // 86: hagall.EntityComponentDeleteBroadcast.entity_component:type_name -> hagall.EntityComponent
	1,   // 87: hagall.EntityComponentUpdate.type:type_name -> hagall.MsgType
	53,  // 88: hagall.EntityComponentUpdate.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 89: hagall.EntityComponentUpdateBroadcast.type:type_name -> hagall.MsgType
	53,  // 90: hagall.EntityComponentUpdateBroadcast.timestamp:type_name -> google.protobuf.Timestamp
	53,  // 91: hagall.EntityComponentUpdateBroadcast.origin_timestamp:type_name -> google.protobuf.Timestamp
	27,  // 92: hagall.EntityComponentUpdateBroadcast.entity_component:type_name -> hagall.EntityComponent
	1,   // 93: hagall.EntityComponentListRequest.type:type_name -> hagall.MsgType
	53,  // 94: hagall.EntityComponentListRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 95: hagall.EntityComponentListResponse.type:type_name -> hagall.MsgType
	53,  // 96: hagall.EntityComponentListResponse.timestamp:type_name -> google.protobuf.Timestamp
	27,  // 97: hagall.EntityComponentListResponse.entity_components:type_name -> hagall.EntityComponent
	1,   // 98: hagall.EntityComponentTypeSubscribeRequest.type:type_name -> hagall.MsgType
	53,  // 99: hagall.EntityComponentTypeSubscribeRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 100: hagall.EntityComponentTypeSubscribeResponse.type:type_name -> hagall.MsgType
	53,  // 101: hagall.EntityComponentTypeSubscribeResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 102: hagall.EntityComponentTypeUnsubscribeRequest.type:type_name -> hagall.MsgType
	53,  // 103: hagall.EntityComponentTypeUnsubscribeRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 104: hagall.EntityComponentTypeUnsubscribeResponse.type:type_name -> hagall.MsgType
	53,  // 105: hagall.EntityComponentTypeUnsubscribeResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 106: hagall.ReceiptRequest.type:type_name -> hagall.MsgType
	53,  // 107: hagall.ReceiptRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 108: hagall.ReceiptResponse.type:type_name -> hagall.MsgType
	53,  // 109: hagall.ReceiptResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 110: hagall.SignedPingRequest.type:type_name -> hagall.MsgType
	53,  // 111: hagall.SignedPingRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 112: hagall.SignedPingResponse.type:type_name -> hagall.MsgType
	53,  // 113: hagall.SignedPingResponse.timestamp:type_name -> google.protobuf.Timestamp
	52,  // 114: hagall.SignedPingResponse.data:type_name -> hagall.LatencyData
	53,  // 115: hagall.LatencyData.created_at:type_name -> google.protobuf.Timestamp
	116, // [116:116] is the sub-list for method output_type
	116, // [116:116] is the sub-list for method input_type
	116, // [116:116] is the sub-list for extension type_name
	116, // [116:116] is the sub-list for extension extendee
	0,   // [0:116] is the sub-list for field type_name
}

func init() { file_messages_hagallpb_hagall_proto_init() }
func file_messages_hagallpb_hagall_proto_init() {
	if File_messages_hagallpb_hagall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_hagallpb_hagall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantJoinBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantLeaveBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityAddBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityDeleteBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityUpdatePose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityUpdatePoseBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMessageBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeGetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeGetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeGetIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeGetIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentAddBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentDeleteBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentUpdateBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeUnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityComponentTypeUnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedPingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_hagallpb_hagall_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatencyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_hagallpb_hagall_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_hagallpb_hagall_proto_goTypes,
		DependencyIndexes: file_messages_hagallpb_hagall_proto_depIdxs,
		EnumInfos:         file_messages_hagallpb_hagall_proto_enumTypes,
		MessageInfos:      file_messages_hagallpb_hagall_proto_msgTypes,
	}.Build()
	File_messages_hagallpb_hagall_proto = out.File
	file_messages_hagallpb_hagall_proto_rawDesc = nil
	file_messages_hagallpb_hagall_proto_goTypes = nil
	file_messages_hagallpb_hagall_proto_depIdxs = nil
}
