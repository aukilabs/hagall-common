// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: messages/dagazpb/dagaz.proto

package dagazpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_MSG_TYPE_ERROR_RESPONSE                  MsgType = 0
	MsgType_MSG_TYPE_DAGAZ_QUAD_SAMPLE               MsgType = 300
	MsgType_MSG_TYPE_DAGAZ_GET_GROUND_PLANE_REQUEST  MsgType = 301
	MsgType_MSG_TYPE_DAGAZ_GET_GROUND_PLANE_RESPONSE MsgType = 302
	MsgType_MSG_TYPE_DAGAZ_GET_REGION_REQUEST        MsgType = 303
	MsgType_MSG_TYPE_DAGAZ_GET_REGION_RESPONSE       MsgType = 304
	MsgType_MSG_TYPE_DAGAZ_GET_DEBUG_INFO_REQUEST    MsgType = 305
	MsgType_MSG_TYPE_DAGAZ_GET_DEBUG_INFO_RESPONSE   MsgType = 306
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0:   "MSG_TYPE_ERROR_RESPONSE",
		300: "MSG_TYPE_DAGAZ_QUAD_SAMPLE",
		301: "MSG_TYPE_DAGAZ_GET_GROUND_PLANE_REQUEST",
		302: "MSG_TYPE_DAGAZ_GET_GROUND_PLANE_RESPONSE",
		303: "MSG_TYPE_DAGAZ_GET_REGION_REQUEST",
		304: "MSG_TYPE_DAGAZ_GET_REGION_RESPONSE",
		305: "MSG_TYPE_DAGAZ_GET_DEBUG_INFO_REQUEST",
		306: "MSG_TYPE_DAGAZ_GET_DEBUG_INFO_RESPONSE",
	}
	MsgType_value = map[string]int32{
		"MSG_TYPE_ERROR_RESPONSE":                  0,
		"MSG_TYPE_DAGAZ_QUAD_SAMPLE":               300,
		"MSG_TYPE_DAGAZ_GET_GROUND_PLANE_REQUEST":  301,
		"MSG_TYPE_DAGAZ_GET_GROUND_PLANE_RESPONSE": 302,
		"MSG_TYPE_DAGAZ_GET_REGION_REQUEST":        303,
		"MSG_TYPE_DAGAZ_GET_REGION_RESPONSE":       304,
		"MSG_TYPE_DAGAZ_GET_DEBUG_INFO_REQUEST":    305,
		"MSG_TYPE_DAGAZ_GET_DEBUG_INFO_RESPONSE":   306,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_dagazpb_dagaz_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_messages_dagazpb_dagaz_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{0}
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Point) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Ray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Point `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Point `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Ray) Reset() {
	*x = Ray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ray) ProtoMessage() {}

func (x *Ray) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ray.ProtoReflect.Descriptor instead.
func (*Ray) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{1}
}

func (x *Ray) GetFrom() *Point {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Ray) GetTo() *Point {
	if x != nil {
		return x.To
	}
	return nil
}

type Quad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center     *Point `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Extents    *Point `protobuf:"bytes,2,opt,name=extents,proto3" json:"extents,omitempty"` // from this one can derive the plane information
	MergeCount uint32 `protobuf:"varint,3,opt,name=merge_count,json=mergeCount,proto3" json:"merge_count,omitempty"`
}

func (x *Quad) Reset() {
	*x = Quad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quad) ProtoMessage() {}

func (x *Quad) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quad.ProtoReflect.Descriptor instead.
func (*Quad) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{2}
}

func (x *Quad) GetCenter() *Point {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *Quad) GetExtents() *Point {
	if x != nil {
		return x.Extents
	}
	return nil
}

func (x *Quad) GetMergeCount() uint32 {
	if x != nil {
		return x.MergeCount
	}
	return 0
}

type DagazQuadSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Samples   []*Quad                `protobuf:"bytes,4,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *DagazQuadSample) Reset() {
	*x = DagazQuadSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazQuadSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazQuadSample) ProtoMessage() {}

func (x *DagazQuadSample) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazQuadSample.ProtoReflect.Descriptor instead.
func (*DagazQuadSample) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{3}
}

func (x *DagazQuadSample) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazQuadSample) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazQuadSample) GetSamples() []*Quad {
	if x != nil {
		return x.Samples
	}
	return nil
}

// test message to read server state:
type DagazGetGroundPlaneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestId uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Ray       *Ray                   `protobuf:"bytes,3,opt,name=ray,proto3" json:"ray,omitempty"`
}

func (x *DagazGetGroundPlaneRequest) Reset() {
	*x = DagazGetGroundPlaneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetGroundPlaneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetGroundPlaneRequest) ProtoMessage() {}

func (x *DagazGetGroundPlaneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetGroundPlaneRequest.ProtoReflect.Descriptor instead.
func (*DagazGetGroundPlaneRequest) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{4}
}

func (x *DagazGetGroundPlaneRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetGroundPlaneRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetGroundPlaneRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DagazGetGroundPlaneRequest) GetRay() *Ray {
	if x != nil {
		return x.Ray
	}
	return nil
}

type DagazGetGroundPlaneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestId uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Ground    *Quad                  `protobuf:"bytes,3,opt,name=ground,proto3" json:"ground,omitempty"`
}

func (x *DagazGetGroundPlaneResponse) Reset() {
	*x = DagazGetGroundPlaneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetGroundPlaneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetGroundPlaneResponse) ProtoMessage() {}

func (x *DagazGetGroundPlaneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetGroundPlaneResponse.ProtoReflect.Descriptor instead.
func (*DagazGetGroundPlaneResponse) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{5}
}

func (x *DagazGetGroundPlaneResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetGroundPlaneResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetGroundPlaneResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DagazGetGroundPlaneResponse) GetGround() *Quad {
	if x != nil {
		return x.Ground
	}
	return nil
}

type DagazGetRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestId uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Min       *Point                 `protobuf:"bytes,3,opt,name=min,proto3" json:"min,omitempty"`
	Max       *Point                 `protobuf:"bytes,4,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *DagazGetRegionRequest) Reset() {
	*x = DagazGetRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetRegionRequest) ProtoMessage() {}

func (x *DagazGetRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetRegionRequest.ProtoReflect.Descriptor instead.
func (*DagazGetRegionRequest) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{6}
}

func (x *DagazGetRegionRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetRegionRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetRegionRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DagazGetRegionRequest) GetMin() *Point {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *DagazGetRegionRequest) GetMax() *Point {
	if x != nil {
		return x.Max
	}
	return nil
}

type DagazGetRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequestId uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Quads     []*Quad                `protobuf:"bytes,3,rep,name=quads,proto3" json:"quads,omitempty"`
}

func (x *DagazGetRegionResponse) Reset() {
	*x = DagazGetRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetRegionResponse) ProtoMessage() {}

func (x *DagazGetRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetRegionResponse.ProtoReflect.Descriptor instead.
func (*DagazGetRegionResponse) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{7}
}

func (x *DagazGetRegionResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetRegionResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetRegionResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DagazGetRegionResponse) GetQuads() []*Quad {
	if x != nil {
		return x.Quads
	}
	return nil
}

// Debug stuff:
type DagazGetDebugInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // We need to be able to not send this...
	RequestId uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *DagazGetDebugInfoRequest) Reset() {
	*x = DagazGetDebugInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetDebugInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetDebugInfoRequest) ProtoMessage() {}

func (x *DagazGetDebugInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetDebugInfoRequest.ProtoReflect.Descriptor instead.
func (*DagazGetDebugInfoRequest) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{8}
}

func (x *DagazGetDebugInfoRequest) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetDebugInfoRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetDebugInfoRequest) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type DagazGetDebugInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           MsgType                `protobuf:"varint,1,opt,name=type,proto3,enum=dagaz.MsgType" json:"type,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // We need to be able to not send this...
	RequestId      uint32                 `protobuf:"varint,1337,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	GridResolution uint32                 `protobuf:"varint,3,opt,name=grid_resolution,json=gridResolution,proto3" json:"grid_resolution,omitempty"`
	GridRowCount   uint32                 `protobuf:"varint,4,opt,name=grid_row_count,json=gridRowCount,proto3" json:"grid_row_count,omitempty"`
	GridColCount   uint32                 `protobuf:"varint,5,opt,name=grid_col_count,json=gridColCount,proto3" json:"grid_col_count,omitempty"`
	GridPlaneCount uint32                 `protobuf:"varint,6,opt,name=grid_plane_count,json=gridPlaneCount,proto3" json:"grid_plane_count,omitempty"`
	GridMergeCount uint32                 `protobuf:"varint,7,opt,name=grid_merge_count,json=gridMergeCount,proto3" json:"grid_merge_count,omitempty"`
	GridMinPoint   *Point                 `protobuf:"bytes,8,opt,name=grid_min_point,json=gridMinPoint,proto3" json:"grid_min_point,omitempty"`
	GridMaxPoint   *Point                 `protobuf:"bytes,9,opt,name=grid_max_point,json=gridMaxPoint,proto3" json:"grid_max_point,omitempty"`
	Occupancy      []uint32               `protobuf:"varint,10,rep,packed,name=occupancy,proto3" json:"occupancy,omitempty"`
}

func (x *DagazGetDebugInfoResponse) Reset() {
	*x = DagazGetDebugInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_dagazpb_dagaz_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DagazGetDebugInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagazGetDebugInfoResponse) ProtoMessage() {}

func (x *DagazGetDebugInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_dagazpb_dagaz_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagazGetDebugInfoResponse.ProtoReflect.Descriptor instead.
func (*DagazGetDebugInfoResponse) Descriptor() ([]byte, []int) {
	return file_messages_dagazpb_dagaz_proto_rawDescGZIP(), []int{9}
}

func (x *DagazGetDebugInfoResponse) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_MSG_TYPE_ERROR_RESPONSE
}

func (x *DagazGetDebugInfoResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DagazGetDebugInfoResponse) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridResolution() uint32 {
	if x != nil {
		return x.GridResolution
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridRowCount() uint32 {
	if x != nil {
		return x.GridRowCount
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridColCount() uint32 {
	if x != nil {
		return x.GridColCount
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridPlaneCount() uint32 {
	if x != nil {
		return x.GridPlaneCount
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridMergeCount() uint32 {
	if x != nil {
		return x.GridMergeCount
	}
	return 0
}

func (x *DagazGetDebugInfoResponse) GetGridMinPoint() *Point {
	if x != nil {
		return x.GridMinPoint
	}
	return nil
}

func (x *DagazGetDebugInfoResponse) GetGridMaxPoint() *Point {
	if x != nil {
		return x.GridMaxPoint
	}
	return nil
}

func (x *DagazGetDebugInfoResponse) GetOccupancy() []uint32 {
	if x != nil {
		return x.Occupancy
	}
	return nil
}

var File_messages_dagazpb_dagaz_proto protoreflect.FileDescriptor

var file_messages_dagazpb_dagaz_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x67, 0x61, 0x7a,
	0x70, 0x62, 0x2f, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x64, 0x61, 0x67, 0x61, 0x7a, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x22, 0x45, 0x0a, 0x03, 0x52, 0x61, 0x79,
	0x12, 0x20, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x74, 0x6f,
	0x22, 0x75, 0x0a, 0x04, 0x51, 0x75, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x67, 0x61,
	0x7a, 0x51, 0x75, 0x61, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x61,
	0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x61, 0x67,
	0x61, 0x7a, 0x2e, 0x51, 0x75, 0x61, 0x64, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x22, 0xb8, 0x01, 0x0a, 0x1a, 0x44, 0x61, 0x67, 0x61, 0x7a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x03, 0x72, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x67,
	0x61, 0x7a, 0x2e, 0x52, 0x61, 0x79, 0x52, 0x03, 0x72, 0x61, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x1b,
	0x44, 0x61, 0x67, 0x61, 0x7a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x61,
	0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x61, 0x67, 0x61,
	0x7a, 0x2e, 0x51, 0x75, 0x61, 0x64, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xd5,
	0x01, 0x0a, 0x15, 0x44, 0x61, 0x67, 0x61, 0x7a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0xb9, 0x01, 0x0a, 0x16, 0x44, 0x61, 0x67, 0x61, 0x7a,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x05, 0x71, 0x75, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x51, 0x75, 0x61, 0x64, 0x52, 0x05, 0x71, 0x75, 0x61,
	0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x18, 0x44, 0x61, 0x67, 0x61, 0x7a, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xe8, 0x03,
	0x0a, 0x19, 0x44, 0x61, 0x67, 0x61, 0x7a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x61,
	0x7a, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xb9, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x72, 0x69,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x72, 0x69, 0x64,
	0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x69, 0x64,
	0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x67, 0x72, 0x69, 0x64, 0x43, 0x6f, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x69, 0x64,
	0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67,
	0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x67, 0x72, 0x69, 0x64, 0x4d, 0x69,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0e, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x67, 0x72,
	0x69, 0x64, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x6f,
	0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x2a, 0xe0, 0x02, 0x0a, 0x07, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1a, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x47, 0x41, 0x5a, 0x5f, 0x51, 0x55, 0x41, 0x44, 0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x10,
	0xac, 0x02, 0x12, 0x2c, 0x0a, 0x27, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x41, 0x47, 0x41, 0x5a, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f,
	0x50, 0x4c, 0x41, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xad, 0x02,
	0x12, 0x2d, 0x0a, 0x28, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x47,
	0x41, 0x5a, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xae, 0x02, 0x12,
	0x26, 0x0a, 0x21, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x47, 0x41,
	0x5a, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0xaf, 0x02, 0x12, 0x27, 0x0a, 0x22, 0x4d, 0x53, 0x47, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x47, 0x41, 0x5a, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xb0, 0x02,
	0x12, 0x2a, 0x0a, 0x25, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x47,
	0x41, 0x5a, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xb1, 0x02, 0x12, 0x2b, 0x0a, 0x26,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x47, 0x41, 0x5a, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xb2, 0x02, 0x22, 0x05, 0x08, 0x01, 0x10, 0xab, 0x02,
	0x22, 0x09, 0x08, 0x90, 0x03, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x42, 0x3f, 0x5a, 0x10, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x67, 0x61, 0x7a, 0x70, 0x62, 0xa2,
	0x02, 0x05, 0x44, 0x61, 0x67, 0x61, 0x7a, 0xaa, 0x02, 0x22, 0x41, 0x75, 0x6b, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x65, 0x4b, 0x69, 0x74, 0x2e, 0x44, 0x61, 0x67, 0x61, 0x7a, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_dagazpb_dagaz_proto_rawDescOnce sync.Once
	file_messages_dagazpb_dagaz_proto_rawDescData = file_messages_dagazpb_dagaz_proto_rawDesc
)

func file_messages_dagazpb_dagaz_proto_rawDescGZIP() []byte {
	file_messages_dagazpb_dagaz_proto_rawDescOnce.Do(func() {
		file_messages_dagazpb_dagaz_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_dagazpb_dagaz_proto_rawDescData)
	})
	return file_messages_dagazpb_dagaz_proto_rawDescData
}

var file_messages_dagazpb_dagaz_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_dagazpb_dagaz_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_messages_dagazpb_dagaz_proto_goTypes = []interface{}{
	(MsgType)(0),                        // 0: dagaz.MsgType
	(*Point)(nil),                       // 1: dagaz.Point
	(*Ray)(nil),                         // 2: dagaz.Ray
	(*Quad)(nil),                        // 3: dagaz.Quad
	(*DagazQuadSample)(nil),             // 4: dagaz.DagazQuadSample
	(*DagazGetGroundPlaneRequest)(nil),  // 5: dagaz.DagazGetGroundPlaneRequest
	(*DagazGetGroundPlaneResponse)(nil), // 6: dagaz.DagazGetGroundPlaneResponse
	(*DagazGetRegionRequest)(nil),       // 7: dagaz.DagazGetRegionRequest
	(*DagazGetRegionResponse)(nil),      // 8: dagaz.DagazGetRegionResponse
	(*DagazGetDebugInfoRequest)(nil),    // 9: dagaz.DagazGetDebugInfoRequest
	(*DagazGetDebugInfoResponse)(nil),   // 10: dagaz.DagazGetDebugInfoResponse
	(*timestamppb.Timestamp)(nil),       // 11: google.protobuf.Timestamp
}
var file_messages_dagazpb_dagaz_proto_depIdxs = []int32{
	1,  // 0: dagaz.Ray.from:type_name -> dagaz.Point
	1,  // 1: dagaz.Ray.to:type_name -> dagaz.Point
	1,  // 2: dagaz.Quad.center:type_name -> dagaz.Point
	1,  // 3: dagaz.Quad.extents:type_name -> dagaz.Point
	0,  // 4: dagaz.DagazQuadSample.type:type_name -> dagaz.MsgType
	11, // 5: dagaz.DagazQuadSample.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 6: dagaz.DagazQuadSample.samples:type_name -> dagaz.Quad
	0,  // 7: dagaz.DagazGetGroundPlaneRequest.type:type_name -> dagaz.MsgType
	11, // 8: dagaz.DagazGetGroundPlaneRequest.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 9: dagaz.DagazGetGroundPlaneRequest.ray:type_name -> dagaz.Ray
	0,  // 10: dagaz.DagazGetGroundPlaneResponse.type:type_name -> dagaz.MsgType
	11, // 11: dagaz.DagazGetGroundPlaneResponse.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 12: dagaz.DagazGetGroundPlaneResponse.ground:type_name -> dagaz.Quad
	0,  // 13: dagaz.DagazGetRegionRequest.type:type_name -> dagaz.MsgType
	11, // 14: dagaz.DagazGetRegionRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 15: dagaz.DagazGetRegionRequest.min:type_name -> dagaz.Point
	1,  // 16: dagaz.DagazGetRegionRequest.max:type_name -> dagaz.Point
	0,  // 17: dagaz.DagazGetRegionResponse.type:type_name -> dagaz.MsgType
	11, // 18: dagaz.DagazGetRegionResponse.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 19: dagaz.DagazGetRegionResponse.quads:type_name -> dagaz.Quad
	0,  // 20: dagaz.DagazGetDebugInfoRequest.type:type_name -> dagaz.MsgType
	11, // 21: dagaz.DagazGetDebugInfoRequest.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 22: dagaz.DagazGetDebugInfoResponse.type:type_name -> dagaz.MsgType
	11, // 23: dagaz.DagazGetDebugInfoResponse.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 24: dagaz.DagazGetDebugInfoResponse.grid_min_point:type_name -> dagaz.Point
	1,  // 25: dagaz.DagazGetDebugInfoResponse.grid_max_point:type_name -> dagaz.Point
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_messages_dagazpb_dagaz_proto_init() }
func file_messages_dagazpb_dagaz_proto_init() {
	if File_messages_dagazpb_dagaz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_dagazpb_dagaz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazQuadSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetGroundPlaneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetGroundPlaneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetDebugInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_dagazpb_dagaz_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DagazGetDebugInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_dagazpb_dagaz_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_dagazpb_dagaz_proto_goTypes,
		DependencyIndexes: file_messages_dagazpb_dagaz_proto_depIdxs,
		EnumInfos:         file_messages_dagazpb_dagaz_proto_enumTypes,
		MessageInfos:      file_messages_dagazpb_dagaz_proto_msgTypes,
	}.Build()
	File_messages_dagazpb_dagaz_proto = out.File
	file_messages_dagazpb_dagaz_proto_rawDesc = nil
	file_messages_dagazpb_dagaz_proto_goTypes = nil
	file_messages_dagazpb_dagaz_proto_depIdxs = nil
}
